openapi: 3.0.3
info:
  title: lich
  version: '1.0'
  description: API spec
servers:
  - url: https://lich.local
paths:
  /machine/register:
    put:
      summary: Creates machine and returns itself
      description: 'Creates machine and immediately creates session for this machine'
      operationId: ''
      tags:
        - machine
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                os:
                  type: string
      responses:
        '200':
          headers:
            Set-Cookie:
              schema:
                type: string
                example: lichsession=abcde12345; Path=/; Expires=Wed, 02 Apr 2025 19:10:55 GMT; Max-Age=2592000
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'  
        '400':
          $ref: '#/components/responses/400Error'
  /machine/{name}:
    get:
      summary: Returns Machine information
      description: "If auth cookie provided return by id, name provided, return Machine by name, if not provided, return all Machines registered at this IP"
      operationId: ''
      tags:
        - machine
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            format: string
              
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Machine'
                - $ref: '#/components/schemas/MachineArray'
          
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
  /machine/actas/{machine_id}:
    get:
      summary: Creates a session, where all actions are performed by machine_id
      description: Act as provided machine_id
      tags:
        - machine
      parameters:
        - name: machine_id
          in: path
          required: true
          schema:
            type: integer
            format: integer
      responses:
        '204':
          description: success
          headers:
            Set-Cookie:
              schema:
                type: string
                example: lichsession=abcde12345; Path=/; Expires=Wed, 02 Apr 2025 19:10:55 GMT; Max-Age=2592000
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
  /resource/new:
    put:
      summary: Creates new Resource
      description: 'Used on initializing Resource definition'
      security:
        - cookieAuth: []
      tags:
        - resource
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: string
                blob:
                  type: string
                  format: byte
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
  /resource/all:
    get:
      summary: Returns all created resources
      description: ''
      operationId: ''
      tags: 
        - resource
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceArray'
  /resource/{id}:
    get:
      summary: Returns resource by id
      description: ''
      operationId: ''
      parameters:
        - name: id
          in: path
          description: id of resource
          required: true
          schema:
            type: integer
      tags:
        - resource
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
    delete:
      summary: Delete Resource defintion, deletes all versions.
      security:
        - cookieAuth: []
      tags:
        - resource
      parameters:
        - name: id
          in: path
          description: id of resource
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: success no content
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '404':
          $ref: '#/components/responses/404Error'
  /resource/version/new-version/{id}:
    put:
      summary: Create new version on resource.
      security:
        - cookieAuth: []
      description: "Warning: creating new version sets Resource's current version. Adding new version edits Resource definition (last_change_at)"
      tags:
        - version
      parameters:
        - name: id
          description: id of resource
          in: path
          required: true
          schema:
            type: integer
            format: id
      requestBody:
        content:
          application/json:
            schema:
              properties:
                blob:
                  type: string
                  format: byte
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
  /resource/version/{id}:
    get:
      summary: Returns versions of provided resource id.
      tags:
        - version
      parameters:
        - name: id
          in: path
          required: true
          description: id of resource
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionArray'
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
          
  /sub:
    get:
      summary: Retrieve all subscriptions by Machine
      security:
        - cookieAuth: []
      tags:
        - subscription
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  sub:
                    $ref: '#/components/schemas/SubscriptionArray'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
  
  /sub/{resource_id}:
    put:
      summary: Subscribes Machine to Resource, on sync it fetches current version if Resource changed since last sync.
      security:
        - cookieAuth: []
      tags:
        - subscription
      parameters:
        - name: resource_id
          in: path
          required: true
          description: id of resource
          schema:
            type: integer
      responses:
        '204':
          description: success no content
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
    get:
      summary: Retrieve subscription by id
      security:
        - cookieAuth: []
      tags:
        - subscription
      parameters:
        - name: resource_id
          in: path
          required: true
          description: id of resource
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  sub:
                    $ref: '#/components/schemas/Subscription'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
    delete:
      summary: Delete a subscription by id
      security:
        - cookieAuth: []
      tags:
        - subscription
      parameters:
        - name: resource_id
          in: path
          required: true
          description: id of resource
          schema:
            type: integer
      responses:
        '204':
          description: success no content
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '404':
          $ref: '#/components/responses/404Error'

  /sync:
    get:
      summary: Synchronizes subscribed resources if changed since last sync.
      security:
        - cookieAuth: []
      tags:
        - sync
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionArray'
        '204':
          description: success no content
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
  /sync/{resource_id}:
    get:
      summary: Synchronizes selected resource (forcefully)
      security:
        - cookieAuth: []
      parameters:
        - name: resource_id
          required: true
          in: path
          schema:
            type: integer
            format: id
      tags:
        - sync
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
  /sync/{resource_id}/{version_id}:
    get:
      summary: Synchronizes selected version of Resource (forcefully)
      security:
        - cookieAuth: []
      parameters:
        - name: resource_id
          required: true
          in: path
          schema:
            type: integer
            format: id
        - name: version_id
          required: true
          in: path
          schema:
            type: integer
            format: id
      tags:
        - sync
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '404':
          $ref: '#/components/responses/404Error'
            
components:
  schemas:
    Machine:
      type: object
      properties:
        id:
          type: integer
          format: id
        name:
          type: string
          format: string
        os:
          type: string
          format: string
        last_sync:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        ip:
          type: string
          format: ipv4
    MachineArray:
      type: array
      items:
        $ref: '#/components/schemas/Machine'
    Resource:
      type: object
      properties:
        id:
          type: integer
          format: id
        created_at:
          type: string
          format: date-time
        last_change_at:
          type: string
          format: date-time
        name:
          type: string
          format: string
        type:
          type: string
          format: string
        current_version_id:
          type: integer
          format: integer
        author_machine:
          $ref: '#/components/schemas/Machine'
    ResourceArray:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    Version:
      type: object
      properties:
        id:
          type: integer
          format: id
        created_at:
          type: string
          format: date-time
        blob:
          type: string
          format: byte
        num:
          type: integer
          format: integer
        version_author:
          $ref: '#/components/schemas/Machine'
        resource:
          $ref: '#/components/schemas/Resource'
    VersionArray:
      type: array
      items:
        $ref: '#/components/schemas/Version'
    Subscription:
      type: object
      properties:
        id:
          type: integer
          format: id
        created_at:
          type: string
          format: date-time
        machine: 
          $ref: '#/components/schemas/Machine'
        resource:
          $ref: '#/components/schemas/Resource'
    SubscriptionArray:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
  responses:
    GenericError:
      description: generic error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    400Error:
      description: bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            message: Invalid request
    401Error:
      description: no authorization
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            message: No authorization
    403Error:
      description: this resource is forbidden for this scope of permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            message: This resource is forbidden for this scope of permissions
    404Error:
      description: requested resource not found
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: lichsession
tags:
  - name: machine
    description: Everything related to Machine entity
  - name: resource
    description: Everything related to Resource entity
  - name: version
    description: Everything related to Version entity
  - name: subscription
    description: Everything related to Subscription entity
  - name: sync
    description: Everything related to syncing 
